"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const userStyles_1 = __importDefault(require("./userStyles"));
function misc(options, theme, colors) {
    const components = {};
    const { misc, globalStyles } = options;
    const userGlobalStyles = (0, userStyles_1.default)(theme, globalStyles);
    const userMiscBaseStyles = (0, userStyles_1.default)(theme, misc === null || misc === void 0 ? void 0 : misc.baseStyles);
    const prefix = (userGlobalStyles === null || userGlobalStyles === void 0 ? void 0 : userGlobalStyles.prefix) || 'reservoir';
    const miscBaseStyles = Object.assign(Object.assign({ userSelect: 'none', outline: '2px solid transparent', outlineOffset: '2px', '&:disabled': {
            cursor: 'not-allowed',
        }, transitionProperty: theme(`transitionProperty[all]`), transitionDuration: theme(`transitionDuration[200]`), transitionTimingFunction: theme(`transitionTimingFunction['ease-in-out']`) }, userGlobalStyles), userMiscBaseStyles);
    colors.forEach((color) => {
        components[`.${prefix}-${color}-dropdown-item`] = Object.assign(Object.assign({}, miscBaseStyles), { padding: '12px 16px', borderRadius: '8px', display: 'flex', alignItems: 'center', justifyContent: 'between', gap: '8px', backgroundColor: 'transparent', '&:not(:disabled):hover': {
                backgroundColor: theme(`colors.${color}[100]`),
            }, '&:focus': {
                backgroundColor: theme(`colors.${color}[100]`),
            }, '&:disabled': Object.assign(Object.assign({}, miscBaseStyles['&:disabled']), { color: theme(`colors.gray[300]`), backgroundColor: theme(`colors.gray[400]`) }) });
    });
    return components;
}
exports.default = misc;
