import{useControllableState as e}from"@radix-ui/react-use-controllable-state";import{Toggle as o}from"@radix-ui/react-toggle";import*as r from"@radix-ui/react-roving-focus";import{createRovingFocusGroupScope as t}from"@radix-ui/react-roving-focus";import{Primitive as a}from"@radix-ui/react-primitive";import{createContextScope as l}from"@radix-ui/react-context";import n from"react";import c from"@babel/runtime/helpers/esm/extends";const[u,i]=l("ToggleGroup",[t]);export{i as createToggleGroupScope};const p=t();export const ToggleGroup=/*#__PURE__*/n.forwardRef(((e,o)=>{const{type:r,...t}=e;if("single"===r){const e=t;/*#__PURE__*/return n.createElement(m,c({},e,{ref:o}))}if("multiple"===r){const e=t;/*#__PURE__*/return n.createElement(f,c({},e,{ref:o}))}throw new Error("Missing prop `type` expected on `ToggleGroup`")}));/*#__PURE__*/const[s,g]=u("ToggleGroup"),m=/*#__PURE__*/n.forwardRef(((o,r)=>{const{value:t,defaultValue:a,onValueChange:l=(()=>{}),...u}=o,[i,p]=e({prop:t,defaultProp:a,onChange:l});/*#__PURE__*/return n.createElement(s,{scope:o.__scopeToggleGroup,value:i?[i]:[],onItemActivate:p,onItemDeactivate:n.useCallback((()=>p("")),[p])},/*#__PURE__*/n.createElement(G,c({},u,{ref:r})))})),f=/*#__PURE__*/n.forwardRef(((o,r)=>{const{value:t,defaultValue:a,onValueChange:l=(()=>{}),...u}=o,[i=[],p]=e({prop:t,defaultProp:a,onChange:l}),g=n.useCallback((e=>p(((o=[])=>[...o,e]))),[p]),m=n.useCallback((e=>p(((o=[])=>o.filter((o=>o!==e))))),[p]);/*#__PURE__*/return n.createElement(s,{scope:o.__scopeToggleGroup,value:i,onItemActivate:g,onItemDeactivate:m},/*#__PURE__*/n.createElement(G,c({},u,{ref:r})))})),[d,v]=u("ToggleGroup"),G=/*#__PURE__*/n.forwardRef(((e,o)=>{const{__scopeToggleGroup:t,disabled:l=!1,rovingFocus:u=!0,orientation:i,dir:s="ltr",loop:g=!0,...m}=e,f=p(t),v={role:"group",dir:s,...m};/*#__PURE__*/return n.createElement(d,{scope:t,rovingFocus:u,disabled:l},u?/*#__PURE__*/n.createElement(r.Root,c({asChild:!0},f,{orientation:i,dir:s,loop:g}),/*#__PURE__*/n.createElement(a.div,c({},v,{ref:o}))):/*#__PURE__*/n.createElement(a.div,c({},v,{ref:o})))}));export const ToggleGroupItem=/*#__PURE__*/n.forwardRef(((e,o)=>{const t=g("ToggleGroupItem",e.__scopeToggleGroup),a=v("ToggleGroupItem",e.__scopeToggleGroup),l=p(e.__scopeToggleGroup),u=t.value.includes(e.value),i=a.disabled||e.disabled,s={...e,pressed:u,disabled:i},m=n.useRef(null);return a.rovingFocus?/*#__PURE__*/n.createElement(r.Item,c({asChild:!0},l,{focusable:!i,active:u,ref:m}),/*#__PURE__*/n.createElement(T,c({},s,{ref:o}))):/*#__PURE__*/n.createElement(T,c({},s,{ref:o}))}));/*#__PURE__*/const T=/*#__PURE__*/n.forwardRef(((e,r)=>{const{__scopeToggleGroup:t,value:a,...l}=e,u=g("ToggleGroupItem",t);/*#__PURE__*/return n.createElement(o,c({},l,{ref:r,onPressedChange:e=>{e?u.onItemActivate(a):u.onItemDeactivate(a)}}))}));export const Root=ToggleGroup;export const Item=ToggleGroupItem;
//# sourceMappingURL=index.module.js.map
