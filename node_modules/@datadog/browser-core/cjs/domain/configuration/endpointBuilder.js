"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEndpointBuilder = exports.INTAKE_SITE_US = exports.ENDPOINTS = void 0;
var timeUtils_1 = require("../../tools/timeUtils");
var urlPolyfill_1 = require("../../tools/urlPolyfill");
var utils_1 = require("../../tools/utils");
exports.ENDPOINTS = {
    logs: 'logs',
    rum: 'rum',
    sessionReplay: 'session-replay',
};
var INTAKE_TRACKS = {
    logs: 'logs',
    rum: 'rum',
    sessionReplay: 'replay',
};
exports.INTAKE_SITE_US = 'datadoghq.com';
function createEndpointBuilder(initConfiguration, buildEnv, endpointType, tags, source) {
    var _a = initConfiguration.site, site = _a === void 0 ? exports.INTAKE_SITE_US : _a, clientToken = initConfiguration.clientToken;
    var domainParts = site.split('.');
    var extension = domainParts.pop();
    var host = exports.ENDPOINTS[endpointType] + ".browser-intake-" + domainParts.join('-') + "." + extension;
    var baseUrl = "https://" + host + "/api/v2/" + INTAKE_TRACKS[endpointType];
    var proxyUrl = initConfiguration.proxyUrl && urlPolyfill_1.normalizeUrl(initConfiguration.proxyUrl);
    return {
        build: function () {
            var parameters = "ddsource=" + (source || 'browser') +
                ("&ddtags=" + encodeURIComponent(["sdk_version:" + buildEnv.sdkVersion].concat(tags).join(','))) +
                ("&dd-api-key=" + clientToken) +
                ("&dd-evp-origin-version=" + encodeURIComponent(buildEnv.sdkVersion)) +
                "&dd-evp-origin=browser" +
                ("&dd-request-id=" + utils_1.generateUUID());
            if (endpointType === 'rum') {
                parameters += "&batch_time=" + timeUtils_1.timeStampNow();
            }
            var endpointUrl = baseUrl + "?" + parameters;
            return proxyUrl ? proxyUrl + "?ddforward=" + encodeURIComponent(endpointUrl) : endpointUrl;
        },
        buildIntakeUrl: function () {
            return proxyUrl ? proxyUrl + "?ddforward" : baseUrl;
        },
    };
}
exports.createEndpointBuilder = createEndpointBuilder;
//# sourceMappingURL=endpointBuilder.js.map